---
interface Props {
}

const {} = Astro.props;
---

<div class="relative min-h-screen overflow-hidden">
    <!-- Dynamic Background Images -->
    <div class="absolute inset-0 z-0">
        {['/images/mu.jpg', '/images/muu.jpg', '/images/muuu.jpg'].map((img, index) => (
            <div class={`absolute inset-0 transition-opacity duration-1000 ease-in-out ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
                 data-bg-image>
                <img src={img} class="w-full h-full object-cover object-center scale-105" />
            </div>
        ))}
    </div>

    <!-- Gradient Overlays -->
    <div class="absolute inset-0 bg-gradient-to-br from-gray-900/80 via-purple-900/40 to-gray-900/80"></div>
    <div class="absolute inset-0 bg-gradient-to-br from-violet-900/20 via-transparent to-purple-900/20 animate-gradient-slow"></div>
    
    <!-- Grid Texture -->
    <div class="absolute inset-0 bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:48px_48px] mix-blend-soft-light"></div>

    <div class="relative isolate mx-auto max-w-7xl px-6 lg:px-8 h-screen flex items-center ">
        <div class="mx-auto max-w-2xl lg:mx-0 lg:mt-20">

            <h1 class="text-6xl font-bold tracking-tight sm:text-8xl/none bg-clip-text text-transparent bg-gradient-to-r from-white via-purple-200 to-white animate-text-glow">
                <span class="block [text-shadow:0_0_30px_rgba(192,132,252,0.4)]">Next-Gen</span>
                <span class="block mt-2 [text-shadow:0_0_30px_rgba(192,132,252,0.4)]">Digital Evolution</span>
            </h1>

            <p class="mt-8 text-xl/relaxed text-purple-100/90 backdrop-blur-sm">
                Harnessing quantum strategy and AI-driven solutions to propel enterprises into the cognitive era. 
                Where visionaries architect tomorrow.
            </p>

            <div class="mt-12 flex gap-8">
                <a href="/contact" class="group relative flex items-center gap-2 px-8 py-4 text-lg font-semibold transition-all duration-300
                    bg-purple-600/20 backdrop-blur-lg ring-1 ring-purple-400/30 hover:ring-purple-400/60
                    hover:bg-purple-600/40 rounded-2xl hover:shadow-2xl hover:shadow-purple-900/30">
                    <span class="text-purple-100 group-hover:text-white">Begin Transformation</span>
                    <div class="transition-transform duration-300 group-hover:translate-x-1 group-hover:scale-110">
                        <div class="w-4 h-4 bg-purple-300 rounded-full animate-pulse-slow"></div>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <!-- Animated Orb -->
    <div class="absolute right-32 top-1/3 w-[600px] h-[600px] rounded-full bg-gradient-to-r from-violet-600/20 to-purple-600/20 
        blur-[100px] animate-orb-glow -z-10"></div>
</div>

<style>
    @keyframes text-glow {
        0%, 100% { opacity: 0.95; }
        50% { opacity: 1; }
    }

    @keyframes orb-glow {
        0%, 100% { transform: scale(1); opacity: 0.4; }
        50% { transform: scale(1.05); opacity: 0.6; }
    }

    @keyframes gradient-slow {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    .animate-text-glow {
        animation: text-glow 3s ease-in-out infinite;
    }

    .animate-orb-glow {
        animation: orb-glow 8s ease-in-out infinite;
    }

    .animate-gradient-slow {
        background-size: 200% 200%;
        animation: gradient-slow 15s ease infinite;
    }
</style>

<script>
    // Background image cycler
    const bgImages = document.querySelectorAll('[data-bg-image]');
    let currentBg = 0;

    setInterval(() => {
        bgImages[currentBg].classList.remove('opacity-100');
        currentBg = (currentBg + 1) % bgImages.length;
        bgImages[currentBg].classList.add('opacity-100');
    }, 6000);
</script>